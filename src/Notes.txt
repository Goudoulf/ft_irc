AUTHENTICATE : used for SASL authentication 

/*Commands USER*/

/JOIN #<channel> : permet de rejoindre ou creer un channel

/NICK <nickname> : permet de definir ou redefinir le nickname du client

/PASS <password> : permet de definir un mdp de connection

/PRIVMSG <target(channel, nickname)> <message> : permet d'envoyer un message prive a un utilisateur ou a un channel

/NOTICES <target(channel, nickname)> <message> : 

/QUIT <reason> : permet de quitter le serveur

/PING

/PONG



/KICK #<channel> <user> (reason / default message): permet de forcer la suppression d'un utilisateur dans un channel donne

/TOPIC #<channel> (topic) : permet de changer ou de voir le topic du channel donne 

/PART #<channel> (reason) : permet de partir d'un channel

/INVITE <nickname> #<channel>: permet d'inviter un utilisateur dans un channel donne

/MODE #<channel> +<mode> (args): permet de changer le mode du channel
				 +i : sur invitation seulement
				 +t : restreint /TOPIC aux OP
				 +k : demande aux utilisateur de specifier une cle de channel pour rejoindre (/JOIN #chan key)
				 +o : defini la target en OP
				 +l : limite le nombre d'utilisateur dans le channel

Reply from server format:

	:<prefix> <command> <target> :<reply>

	prefix:
		indicate the origin of a message
		ex: server or a client

	command:
		The command will be a three-digit code

	target:
		target of reply

	reply:
		content of reply

prefix client

	:<Nickname>!<Username>@<Hostname>

ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890
31 16 7 10 29 32
ERR_NEEDMOREPARAMS
ERR_BANNEDFROMCHAN
ERR_INVITEONLYCHAN
ERR_BADCHANNELKEY
ERR_CHANNELISFULL
ERR_BADCHANMASK
ERR_NOSUCHCHANNEL
ERR_TOOMANYCHANNELS
ERR_TOOMANYTARGETS
ERR_UNAVAILRESOURCE
RPL_TOPIC
ERR_NEEDMOREPARAMS
ERR_NOSUCHCHANNEL
ERR_NOTONCHANNEL
ERR_NEEDMOREPARAMS
ERR_KEYSET
ERR_NOCHANMODES
ERR_CHANOPRIVSNEEDED
ERR_USERNOTINCHANNEL
ERR_UNKNOWNMODE
RPL_CHANNELMODEIS
RPL_BANLIST
RPL_ENDOFBANLIST
RPL_EXCEPTLIST
RPL_ENDOFEXCEPTLIST
RPL_INVITELIST
RPL_ENDOFINVITELIST
RPL_UNIQOPIS
ERR_NEEDMOREPARAMS
ERR_NOTONCHANNEL
RPL_NOTOPIC                     
RPL_TOPIC
ERR_CHANOPRIVSNEEDED
ERR_NOCHANMODES
ERR_NEEDMOREPARAMS
ERR_NOSUCHNICK
ERR_NOTONCHANNEL
ERR_USERONCHANNEL
ERR_CHANOPRIVSNEEDED
RPL_INVITING
RPL_AWAY
ERR_NEEDMOREPARAMS
ERR_NOSUCHCHANNEL
ERR_BADCHANMASK
ERR_CHANOPRIVSNEEDED
ERR_USERNOTINCHANNEL
ERR_NOTONCHANNEL
ERR_NORECIPIENT
ERR_NOTEXTTOSEND
ERR_CANNOTSENDTOCHAN
ERR_NOTOPLEVEL
ERR_WILDTOPLEVEL
ERR_TOOMANYTARGETS
ERR_NOSUCHNICK
RPL_AWAY
ERR_NONICKNAMEGIVEN
ERR_ERRONEUSNICKNAME
ERR_NICKNAMEINUSE
ERR_NICKCOLLISION
ERR_UNAVAILRESOURCE
ERR_RESTRICTED

  target     =  nickname / server
  msgtarget  =  msgto *( "," msgto )
  msgto      =  channel / ( user [ "%" host ] "@" servername )
  msgto      =/ ( user "%" host ) / targetmask
  msgto      =/ nickname / ( nickname "!" user "@" host )
  channel    =  ( "#" / "+" / ( "!" channelid ) / "&" ) chanstring
                [ ":" chanstring ]
  servername =  hostname
  host       =  hostname / hostaddr
  hostname   =  shortname *( "." shortname )
  shortname  =  ( letter / digit ) *( letter / digit / "-" )
                *( letter / digit )
                  ; as specified in RFC 1123 [HNAME]
  hostaddr   =  ip4addr / ip6addr
  ip4addr    =  1*3digit "." 1*3digit "." 1*3digit "." 1*3digit
  ip6addr    =  1*hexdigit 7( ":" 1*hexdigit )
  ip6addr    =/ "0:0:0:0:0:" ( "0" / "FFFF" ) ":" ip4addr
  nickname   =  ( letter / special ) *8( letter / digit / special / "-" )
  targetmask =  ( "$" / "#" ) mask
                  ; see details on allowed masks in section 3.3.1
  chanstring =  %x01-07 / %x08-09 / %x0B-0C / %x0E-1F / %x21-2B
  chanstring =/ %x2D-39 / %x3B-FF
                  ; any octet except NUL, BELL, CR, LF, " ", "," and ":"
  channelid  = 5( %x41-5A / digit )   ; 5( A-Z / 0-9 )
    user       =  1*( %x01-09 / %x0B-0C / %x0E-1F / %x21-3F / %x41-FF )
                  ; any octet except NUL, CR, LF, " " and "@"
  key        =  1*23( %x01-05 / %x07-08 / %x0C / %x0E-1F / %x21-7F )
                  ; any 7-bit US_ASCII character,
                  ; except NUL, CR, LF, FF, h/v TABs, and " "
  letter     =  %x41-5A / %x61-7A       ; A-Z / a-z
  digit      =  %x30-39                 ; 0-9
  hexdigit   =  digit / "A" / "B" / "C" / "D" / "E" / "F"
  special    =  %x5B-60 / %x7B-7D
                   ; "[", "]", "\", "`", "_", "^", "{", "|", "}"

En attendant que je fasse toutes mes merdes, je te propose de commencer le bot. On doit faire un truc de dingue
Suite a notre discussion hier j'ai un plan.
On fait un bot de jeu avec du multi
Avec plusieurs jeux car on est la pour flex

On fait un rpg textuel (probablement solo celui la (quoi que))
Un trivia avec des scores, en multi du coup (peut etre meme un leaderboard?)
Un pendu ?
Typing speed game
Deathrolling (un jeu de de ou roll entre 0-1000 et le premier a 0  a gagner)

Bon je sais pas si on peu tout faire mais, faut voir avant de faire le jeu comment faire un systeme en cpp ou peu l'adapter sur different jeu avec 1 bot. Si sa te chauffe bien sur.. 
tu me dis (modifi√©)

